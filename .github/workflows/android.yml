name: Android CI

on:
  workflow_dispatch:
    inputs:
      file_name:
        description: 'File name has been generated (as will "file_name_version")'
        required: true
        default: 'MonkeyFoodFork'
      version:
        description: 'Application version'
        required: true
        default: '0'
jobs:
  build:
    name: Generate App Bundle
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    - name:  'Permission gradle'
      run: chmod +x gradlew
    - name: Decode Keystore
      id: decode_keystore
      uses: timheuer/base64-to-file@v1.2
      with:
        fileName: 'monkey_keystore.jks'
        fileDir: '/home/runner/work/MonekyFoodFork/MonekyFoodFork/app/keystore/'
        encodedString: ${{ secrets.KEYSTORE }}
    - name: Bundle 'release' with Gradle
      run: ./gradlew :app:bundleRelease
    - name: Sign AAB
      id: sign_aab
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/bundle/release
        signingKeyBase64: ${{ secrets.KEYSTORE }}
        alias: ${{ secrets.SIGNING_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.SIGNING_STORE_PASSWORD }}
        keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}  
      env:
      # override default build-tools version (29.0.3) -- optional
        BUILD_TOOLS_VERSION: "33.0.1"
    - run: echo "Build status report=${{ job.status }}."
    - name: Upload App Bundle
      uses: actions/upload-artifact@v1
      with:
        name: aab
        path: ${{steps.sign_aab.outputs.signedReleaseFile}}
  release:
     name: Release App Bundle
     needs: build
     runs-on: ubuntu-latest
     steps:
       - name: Download AAB from build
         uses: actions/download-artifact@v1
         with:
           name: aab
       - name: Create Release
         id: create_release
         uses: actions/create-release@v1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           tag_name: "v${{ github.event.inputs.version }}"
           release_name: "v${{ github.event.inputs.version }}"
       - name: Upload Release AAB
         id: upload_release_asset
         uses: actions/upload-release-asset@v1.0.1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           upload_url: ${{ steps.create_release.outputs.upload_url }}
           asset_path: aab/app-release.aab
           asset_name: ${{ github.event.repository.name }}.aab
           asset_content_type: application/zip
       - run: echo "Upload returned with status=${{ job.status }}."        
