apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'


android {
    compileSdkVersion 31

    defaultConfig {
        packagingOptions {
            resources.excludes.add("META-INF/*")
        }
        applicationId "com.choice.monkeyfoodfork"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "0.1 Beta"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_VERSION", "\"-DEV\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            buildConfigField "String", "API_VERSION", ""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.1.0"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation kotlinLibrary.stdlib
    implementation project(path: ':core')
    implementation project(path: ':data:di')
    implementation project(path: ':data:irepository')
    implementation project(path: ':data:local')
    implementation project(path: ':data:remote')
    implementation project(path: ':domain')
    implementation project(path: ':domain:model')
    implementation project(path: ':domain:repository')
    implementation project(path: ':domain:usecase')
    implementation project(path: ':design')
    implementation project(path: ':design:theme')
    implementation project(path: ':design:components')
    implementation project(path: ':feature')
    implementation project(path: ':feature:splash')
    implementation project(path: ':feature:home')
    implementation project(path: ':feature:home:recipes')
    implementation project(path: ':feature:recipedetail')
    implementation accompanist.navigation


    implementation 'androidx.test:runner:1.4.0'
    implementation 'androidx.test:core:1.4.0'
    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling-preview:$composeVersion"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation project(path: ':core')
    implementation project(path: ':data:local')
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.1.1")
    testImplementation  ("androidx.compose.ui:ui-test:1.1.1")
// Needed for createComposeRule, but not createAndroidComposeRule:
    debugImplementation("androidx.compose.ui:ui-test-manifest:1.1.1")

    implementation library.fragmentKtx
    testImplementation library.jUnitTest
    implementation library.lifecycleExtension
    implementation library.liveDataKtx
    implementation library.viewModelKtx
    implementation library.constraintlayout
    implementation library.coreKtx

    implementation platform('com.google.firebase:firebase-bom:26.0.0')
    api firebase.analytics

    implementation accompanist.systemUI
    implementation accompanist.insetsUI

    implementation daggerHilt.main
    debugImplementation "androidx.compose.ui:ui-tooling:$composeVersion"
    kapt daggerHilt.androidCompiler
    kapt daggerHilt.compiler

    implementation daggerHilt.viewModel
    implementation daggerHilt.navigation
    implementation library.navFragment
    implementation library.navFragmentKtx
    implementation library.locationServices
    implementation jetpackCompose.activityCompose

    implementation database.room
    kapt database.roomCompiler
    implementation database.roomKtx

}